
General

  The configuration files under 'conf' are expressed in YAML. They are parsed by
  test-suite code and instantiated as hash and array containers.

  - Build configs are used to construct the commands necessary to perform a
    a desired build via the external build-automation system, so their content
    is dependent on that system and the interface to it defined in the test-
    suite code.

  - Runs configs are represented as nested hashes. The top-level "extends" key
    provides the name of a parent run configuration that the current one should
    subclass, with the child's values overriding those of the parent. An
    arbitrary level of recursion is supported, but cycles are detected as fatal
    errors. The top-level "baseline" key specifies a name for the baseline
    subdirectory into which this run's output should be copied when baseline
    creation has been requested, or against which this run's output should be
    compared. Runs whose output is expected to be identical should share a
    common "baseline" value. The top-level "profile" key specifies the name of a
    Ruby module that should be used to extend individual instances of the test
    suite's Run class, providing access to methods specific to the model or
    platform. These values must correspond to module names defined in the
    profile code and, due to Ruby naming restrictions, must begin with an upper-
    case letter.

  - Each array of run names in a suite config represents a set of runs whose
    output will be tested for bitwise identity. Also, one run from each such
    set will contribute its output to a baseline image if one is being
    generated.


