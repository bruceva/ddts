#SBATCH parameters for each preprocessor

# SBATCH -J
batch_name: 
  ldt_prelis: 'ldtprelis'
  lis: 'lis'
  ldt_postlis: 'ldtpostlis'
  geogrid: 'geogrid'
  ungrib: 'ungrib'
  run_merra: 'runmerra'
  merra2wrf: 'merra2w'
  geos2wrf: 'geos2wrf'
  metgrid: 'metgrid'
  real: 'real'
  wrf: 'wrf'
  rip: 'rip'
  casa2wrf: 'casa2wrf'
  prep_chem_sources: 'pcs'
  convert_emiss: 'ce'
  gocart2wrf: 'gc2wrf'
  gsdsu: 'gsdsu'

# SBATCH -t
batch_time:
  ldt_prelis: '0:10:00'
  lis: '08:00:00'
  ldt_postlis: '0:10:00'
  geogrid: '0:15:00' 
  ungrib: '1:00:00'
  run_merra: '0:30:00'
  merra2wrf: '0:10:00'
  geos2wrf: '0:20:00'
  metgrid: '0:10:00'
  real: '0:30:00'
  wrf: '4:00:00'
  rip: '1:00:00'
  casa2wrf: '1:00:00'
  prep_chem_sources: '0:30:00'
  convert_emiss: '0:30:00'
  gocart2wrf: '2:00:00'  
  gsdsu: '1:00:00'

#SBATCH -A
batch_group:
  ldt_prelis: 's0942'
  lis: 's0942'
  ldt_postlis: 's0942'
  geogrid: 's0942'
  ungrib: 's0942'
  run_merra: 's0942'
  merra2wrf: 's0942'
  geos2wrf: 's0942'
  metgrid: 's0942'
  real: 's0942'
  wrf: 's0942'
  rip: 's0942'
  casa2wrf: 's0942'
  prep_chem_sources: 's0942'
  convert_emiss: 's0942'
  gocart2wrf: 's0942'
  gsdsu: 's0942'

#SBATCH -o
batch_slurmout:
  ldt_prelis: 'ldt_prelis.slurm.out'
  lis: 'lis.slurm.out'
  ldt_postlis: 'ldt_postlis.slurm.out'
  geogrid: 'geogrid.slurm.out'
  ungrib: 'ungrib.slurm.out'
  run_merra: 'runmerra.slurm.out'
  merra2wrf: 'merra2wrf.slurm.out'
  geos2wrf: 'geos2wrf.slurm.out'
  metgrid: 'metgrid.slurm.out'
  real: 'real.slurm.out'
  wrf: 'wrf.slurm.out'
  rip: 'rip.slurm.out'
  casa2wrf: 'casa2wrf.slurm.out'
  prep_chem_sources: 'pcs.slurm.out'
  convert_emiss: 'ce.slurm.out'
  gocart2wrf: 'gc2wrf.slurm.out'
  gsdsu: 'gsdsu.slurm.out'

#SBATCH -p 
batch_queue:
  ldt_prelis: ''
  lis: ''
  ldt_postlis: ''
  geogrid: ''
  ungrib: ''
  run_merra: ''
  merra2wrf: ''
  geos2wrf: ''
  metgrid: ''
  real: ''
  wrf: ''
  rip: ''
  casa2wrf: ''
  prep_chem_sources: ''
  convert_emiss: ''
  gocart2wrf: ''
  gsdsu: ''

#SBATCH -N
batch_procline:
  ldt_prelis: 'p1'
  lis: 'p64_16'
  ldt_postlis: 'p1'
  geogrid: 'p288_16' 
  ungrib: 'p1'
  run_merra: 'p1'
  merra2wrf: 'p1'
  geos2wrf: 'p1'
  metgrid: 'p288_16' 
  real: 'p288_16'
  wrf: 'p72_16'  
  rip: 'p1'
  casa2wrf: 'p1'
  prep_chem_sources: 'p1'
  convert_emiss: 'p1'
  gocart2wrf: 'p1' 
  gsdsu: 'p64_16'

# Submission type allows control over jobs that are sent to the queue
# versus executed locally (valid types so far: local, batch)
submission_type:
  ldt_prelis: 'batch'
  lis: 'batch'
  ldt_postlis: 'batch'
  geogrid: 'batch'
  ungrib: 'batch'
  run_merra: 'local'
  ftp_merra: 'local'
  merra2wrf: 'batch'
  geos2wrf: 'batch'
  metgrid: 'batch'
  real: 'batch'
  wrf: 'batch'
  rip: 'batch'
  casa2wrf: 'batch'
  prep_chem_sources: 'batch'
  convert_emiss: 'batch'
  gocart2wrf: 'batch'
  gsdsu: 'batch'
  

# Define the proc line for each supported processor count
proc_line: 
  p1: '1 -n 1 --ntasks-per-node=1'
  p64_8: '8 -n 64 --ntasks-per-node=8'
  p64_16: '4 -n 64 --ntasks-per-node=16 --constraint=sand'
  p72_12: '6 -n 72 --ntasks-per-node=12'
  p72_16: '5 -n 72 --ntasks-per-node=16 --constraint=sand'
  p288_12: '24 -n 288 --ntasks-per-node=12'
  p288_16: '18 -n 288 --ntasks-per-node=16 --constraint=sand'
  p256_16: '16 -n 256 --ntasks-per-node=16 --constraint=sand'


# lis.config x and y values for each supported processor count
lis_config: 
  p60:
      x: '10'
      y: '6'
  p72:
      x: '9'
      y: '8'
  p384:
      x: '24'
      y: '16'
 
# default workflow 
#proc_id: 'p384'

# Other batch parameters not specific to processor count

# modules to load
modules: 
  intel: 'comp/intel-13.0.1.117 mpi/impi-4.0.3.008'
  gfortran: 'other/comp/gcc-4.8.1 other/mpi/openmpi/1.7.2-gcc-4.8.1-shared'

# script exports required 
batch_exports:
  intel: ["NCARG_ROOT=/usr/local/other/SLES11.1/ncarg/6.0.0/intel-13.0.1.117"] 
  gfortran: ["NCARG_ROOT=/usr/local/other/SLES11.1/ncarg/6.0.0/gnu-4.8.1"]     

lis_dir: '/discover/nobackup/projects/lis'

#Note: must define compiler and processing chain to complete run definition
#ex: 
#compiler: intel
#preprocessors: ['geogrid','ungrib','metgrid','real','wrf','rip']
 

