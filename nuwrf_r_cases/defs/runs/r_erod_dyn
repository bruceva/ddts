ddts_extends: 'sbatch'
ddts_build: 'allchem_discover'
ddts_baseline: 'r_erod_dyn_intel'
compiler: 'intel'

namelist_link: [['/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN/namelist.wps','namelist.wps'],
                ['/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN/namelist.input.real','namelist.input.real'],
                ['/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN/namelist.input.wrf','namelist.input.wrf']]

ungrib_input: '/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN/ungrib_input'
metgrid_baredyn_input: '/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN/metgrid_baredyn_input' 

#baselinedir supplies missing data in cases when we just want to run a smaller pipeline
baselinedir: '/discover/nobackup/projects/nu-wrf/regression_testing/data/R_EROD_DYN' 

preprocessor_links:
  geogrid_nochem: ['GEOGRID.TBL.ARW','GEOGRID.TBL']
  geogrid_chemerod: ['GEOGRID.TBL.ARW_CHEM_NUWRF','GEOGRID.TBL']
  geogrid_chem: ['GEOGRID.TBL.ARW_CHEM','GEOGRID.TBL']
  ungrib_gfs: ['Vtable.GFS','Vtable','.','fnl_*']
  ungrib_nam: ['Vtable.NAM','Vtable','.','nam.*']
  ungrib_narr: ['Vtable.NARR','Vtable','.','narr-a*']
  metgrid_arw: ['METGRID.TBL.ARW','METGRID.TBL']
  metgrid_nmm: ['METGRID.TBL.NMM','METGRID.TBL']
  metgrid_afwa: ['METGRID.TBL.AFWA','METGRID.TBL']
  real: ['CAM_ABS_DATA','CAM_AEROPT_DATA','co2_trans','ETAMPNEW_DATA',
         'ETAMPNEW_DATA_DBL', 'ETAMPNEW_DATA.expanded_rain',
         'ETAMPNEW_DATA.expanded_rain_DBL', 'GENPARM.TBL', 'grib2map.tbl', 
         'gribmap.txt', 'LANDUSE.TBL','MPTABLE.TBL', 'ozone.formatted',
         'ozone_lat.formatted', 'ozone_plev.formatted', 'RRTM_DATA', 'RRTM_DATA_DBL', 
         'RRTMG_LW_DATA', 'RRTMG_LW_DATA_DBL', 'RRTMG_SW_DATA', 'RRTMG_SW_DATA_DBL', 
         'SOILPARM.TBL', 'tr49t67', 'tr49t85', 'tr67t85', 'URBPARM.TBL', 'URBPARM_UZE.TBL', 
         'VEGPARM.TBL']
  wrf: ['CAM_ABS_DATA','CAM_AEROPT_DATA','co2_trans','ETAMPNEW_DATA',
        'ETAMPNEW_DATA_DBL', 'ETAMPNEW_DATA.expanded_rain',
        'ETAMPNEW_DATA.expanded_rain_DBL', 'GENPARM.TBL', 'grib2map.tbl',
        'gribmap.txt', 'LANDUSE.TBL','MPTABLE.TBL', 'ozone.formatted',
        'ozone_lat.formatted', 'ozone_plev.formatted', 'RRTM_DATA', 'RRTM_DATA_DBL',
        'RRTMG_LW_DATA', 'RRTMG_LW_DATA_DBL', 'RRTMG_SW_DATA', 'RRTMG_SW_DATA_DBL',
        'SOILPARM.TBL', 'tr49t67', 'tr49t85', 'tr67t85', 'URBPARM.TBL', 'URBPARM_UZE.TBL',
        'VEGPARM.TBL']
  lis: ['LS_PARAMETERS','MET_FORCING']
  rip: ['200','250','300','500Vort','700RH','850','sfcThk','sfcTUV','COMDBZ','sfcDBZUV']

geogrid_select: 'geogrid_chemerod'
ungrib_select: 'ungrib_gfs'
metgrid_select: 'metgrid_arw'
real_select: 'real'

#note: processing wrf and lis properly requires 'wrf' and 'lis' to be part of the name respectively
#ex: 'wrf' and 'wrf_other' will process the links according to wrf rules.
#Must not have both 'wrf' and 'lis' in the same name!
wrf_select: ['wrf','lis']

rip_select: 'rip'

#This definition supports preprocessors: ['geogrid','ungrib','metgrid','real','wrf','rip']

expectedStatusFiles:
  geogrid: ['geogrid_logs/geogrid.log.0000','Successful completion of program']
  ungrib: ['ungrib_logs/ungrib.log','Successful completion of program']
  metgrid: ['metgrid_logs/metgrid.log.0000','Successful completion of program']
  real: ['real_logs/real.rsl.out.0000','SUCCESS COMPLETE REAL_EM']
  wrf:  ['wrf_logs/wrf.rsl.out.0000','SUCCESS COMPLETE WRF']
  rip:  ['rip_logs/rip_results.out','Success']

expectedInputFiles:
  geogrid: ''
  ungrib:  ['ungrib_input','expectedOutputFiles.geogrid']
  metgrid: ['metgrid_baredyn_input','expectedOutputFiles.ungrib']
  real: 'expectedOutputFiles.metgrid'
  wrf: 'expectedOutputFiles.real'
  rip: 'expectedOutputFiles.wrf'

expectedOutputFiles:
  geogrid: ['geo_em.d01.nc']
  ungrib: ["FNL:2011-07-04_00",
    "FNL:2011-07-04_06",
    "FNL:2011-07-04_12",
    "FNL:2011-07-04_18",
    "FNL:2011-07-05_00"]
  metgrid: ["met_em.d01.2011-07-04_00:00:00.nc",
    "met_em.d01.2011-07-04_06:00:00.nc",
    "met_em.d01.2011-07-04_12:00:00.nc",
    "met_em.d01.2011-07-04_18:00:00.nc",
    "met_em.d01.2011-07-05_00:00:00.nc"]
  real: ['namelist.output','wrfbdy_d01','wrfinput_d01']
  wrf: ["wrfout_d01_2011-07-04_00:00:00",
    "wrfout_d01_2011-07-04_01:00:00",
    "wrfout_d01_2011-07-04_02:00:00",
    "wrfout_d01_2011-07-04_03:00:00",
    "wrfout_d01_2011-07-04_04:00:00",
    "wrfout_d01_2011-07-04_05:00:00",
    "wrfout_d01_2011-07-04_06:00:00",
    "wrfout_d01_2011-07-04_07:00:00",
    "wrfout_d01_2011-07-04_08:00:00",
    "wrfout_d01_2011-07-04_09:00:00",
    "wrfout_d01_2011-07-04_10:00:00",
    "wrfout_d01_2011-07-04_11:00:00",
    "wrfout_d01_2011-07-04_12:00:00",
    "wrfout_d01_2011-07-04_13:00:00",
    "wrfout_d01_2011-07-04_14:00:00",
    "wrfout_d01_2011-07-04_15:00:00",
    "wrfout_d01_2011-07-04_16:00:00",
    "wrfout_d01_2011-07-04_17:00:00",
    "wrfout_d01_2011-07-04_18:00:00",
    "wrfout_d01_2011-07-04_19:00:00",
    "wrfout_d01_2011-07-04_20:00:00",
    "wrfout_d01_2011-07-04_21:00:00",
    "wrfout_d01_2011-07-04_22:00:00",
    "wrfout_d01_2011-07-04_23:00:00",
    "wrfout_d01_2011-07-05_00:00:00"]
  rip: ['200_d01.cgm','250_d01.cgm','300_d01.cgm','500Vort_d01.cgm',
        '700RH_d01.cgm','850_d01.cgm','COMDBZ_d01.cgm','sfcDBZUV_d01.cgm',
        'sfcThk_d01.cgm','sfcTUV_d01.cgm']

